#include <stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<unistd.h>
#include<stdint.h>
pthread_mutex_t lock;
void *even(void *arg);
void *odd(void *arg);
#define N 100
pthread_mutex_t l;
int main()
{
    pthread_mutex_init(&l,NULL);
   pthread_t tid1;
   pthread_t tid2;
   pthread_create(&tid1,NULL,&even,NULL);
   pthread_create(&tid2,NULL,&odd,NULL);
   pthread_join(tid1,NULL);
   pthread_join(tid2,NULL);

    return 0;
}
void *even(void *even)
{
    int i;
     pthread_mutex_lock(&l);
    for(i=0;i<=N;i++)
    {
        if(i%2==0)
        printf("thread:1 %d\n",i );
        sleep(3);
        //sleep(random()%3);
         pthread_mutex_unlock(&l);
    }

    return NULL;
}
void *odd(void *odd)
{
    int i;
     pthread_mutex_lock(&l);
    for(i=0;i<=N;i++)
    {
        if(i%2!=0)
        printf("thread:2 %d\n",i );
        sleep(3);
       //sleep(random()%3);
         pthread_mutex_unlock(&l);
    }

     return NULL;
}
